apiVersion: apps/v1
kind: Deployment
metadata:
  name: foo
  namespace: dev
  labels:
    app: foo
    deployment: foo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: foo
      deployment: foo
  template:
    metadata:
      labels:
        app: foo
        deployment: foo
    spec:
      containers:
        - name: foo
          image: foo:dev-latest
          envFrom: []
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: debug
              containerPort: 5005
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /var/lib/myapp/data
              readOnly: false
            - name: config
              mountPath: /etc/myapp/config
              readOnly: true
            - name: cache
              mountPath: /var/cache/myapp
              readOnly: false
            - name: projected-secrets
              mountPath: /var/secrets
              readOnly: true
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: foo-data
        - name: config
          configMap:
            name: foo-config
        - name: cache
          emptyDir:
            medium: Memory
            sizeLimit: 256Mi
        - name: projected-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: foo-secrets
                  items:
                    - key: db-user
                      path: database/username
                    - key: db-password
                      path: database/password
              - configMap:
                  name: foo-config
                  items:
                    - key: redis-url
                      path: config/redis-url
              - configMap:
                  name: dev-cluster-ca
                  items:
                    - key: ca.crt
                      path: config/cluster-ca.crt
              - downwardAPI:
                  items:
                    - path: pod/name
                      fieldRef:
                        fieldPath: metadata.name
                    - path: pod/namespace
                      fieldRef:
                        fieldPath: metadata.namespace
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      serviceAccountName: foo
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
---
apiVersion: v1
kind: Service
metadata:
  name: foo
  namespace: dev
  labels:
    app: foo
    deployment: foo
spec:
  type: ClusterIP
  selector:
    app: foo
    component: backend
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: foo-debug
  namespace: dev
  labels:
    app: foo
    deployment: foo
  annotations:
    description: Debug service for remote debugging
spec:
  type: ClusterIP
  selector:
    app: foo
    component: backend
  ports:
    - name: debug
      protocol: TCP
      port: 5005
      targetPort: 5005
  sessionAffinity: None
