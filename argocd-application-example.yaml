# Example ArgoCD Application manifest for deploying to production
# This manifest can be applied directly to ArgoCD to set up continuous deployment
#
# Apply with: kubectl apply -f argocd-application-example.yaml -n argocd
#
# The manifests in this repository are pre-generated and ready for ArgoCD to use
# without any additional build steps or CUE processing.

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: myapp-production
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default

  source:
    repoURL: https://github.com/your-org/your-repo
    targetRevision: main

    path: manifests

    directory:
      include: prod.yaml

  destination:
    server: https://kubernetes.default.svc
    namespace: production

  syncPolicy:
    automated:
      selfHeal: true
      prune: true

    syncOptions:
      - CreateNamespace=true
      - Validate=true
      - ServerSideApply=true

  ignoreDifferences: []

  retry:
    limit: 5
    backoff:
      duration: 5s
      factor: 2
      maxDuration: 3m

---
# Example Application for staging environment
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: myapp-staging
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default

  source:
    repoURL: https://github.com/your-org/your-repo
    targetRevision: main
    path: manifests
    directory:
      include: stage.yaml

  destination:
    server: https://kubernetes.default.svc
    namespace: staging

  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
      - Validate=true
      - ServerSideApply=true

---
# Example Application for development environment
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: myapp-dev
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default

  source:
    repoURL: https://github.com/your-org/your-repo
    targetRevision: main
    path: manifests
    directory:
      include: dev.yaml

  destination:
    server: https://kubernetes.default.svc
    namespace: dev

  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
      - Validate=true
      - ServerSideApply=true
